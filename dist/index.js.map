{"version":3,"file":"index.js","sources":["../src/api/index.js","../src/hooks/use-lookup-table/index.js","../src/hooks/index.js","../src/index.js"],"sourcesContent":["// import qs from \"qs\";\n\nexport const getImageUrl = (obj, size = `medium`, BACKEND_URL) => {\n  if (!obj) {\n    return null;\n  }\n\n  const url = obj.formats?.[size]?.url || obj.url;\n\n  return `${BACKEND_URL}${url}`;\n};\n\nexport const transformResponseItem = (resItem) => {\n  if (isArray(resItem)) {\n    return resItem.map((item) => transformResponseItem(item));\n  }\n\n  if (isObject(resItem)) {\n    if (isArray(resItem.data)) {\n      resItem = [...resItem.data];\n    } else if (isObject(resItem.data)) {\n      resItem = transformEntriesInObj(flatItemAttributes(resItem.data));\n    } else if (resItem.data === null) {\n      resItem = null;\n    } else {\n      resItem = transformEntriesInObj(flatItemAttributes(resItem));\n    }\n\n    for (const key in resItem) {\n      resItem[key] = transformResponseItem(resItem[key]);\n    }\n\n    return resItem;\n  }\n\n  return resItem;\n};\n\nexport const transformPageBlock = (block, transformers) => {\n  const key = block?._Component;\n\n  if (!transformers?.[key]) {\n    return null;\n  }\n\n  return transformers[key](block);\n};\n\nexport const isObject = (data) => data && typeof data === `object`;\n\nexport const isArray = (data) => data && Array.isArray(data);\n\nexport const flatItemAttributes = (data) => {\n  if (!data?.attributes) return data;\n\n  return {\n    id: data?.id,\n    ...data.attributes,\n  };\n};\n\nexport const combineHeaders = ({ withAuth }) => {\n  const headers = {};\n\n  if (withAuth) {\n    const token = localStorage.getItem(`jwt`);\n    headers.Authorization = `Bearer ${token}`;\n  }\n\n  return headers;\n};\n\nexport const snakeToCamel = (str) => {\n  return str.replace(/([-_][a-z])/gi, (char) => {\n    return char.toUpperCase().replace(`-`, ``).replace(`_`, ``);\n  });\n};\n\nexport const transformEntriesInObj = (item) => {\n  if (isObject(item) && !isArray(item)) {\n    const entries = Object.entries(item).map((entry) => {\n      const key = snakeToCamel(entry[0]);\n\n      let value = entry[1];\n\n      if (isObject(value)) {\n        value = transformEntriesInObj(value);\n      } else if (isArray(value)) {\n        value = value.map((elem) => transformEntriesInObj({ item: elem }));\n      }\n\n      return [key, value];\n    });\n\n    return Object.fromEntries(entries);\n  }\n\n  return item;\n};\n\nexport const removeEmptyFields = ({ data, passKey, files }) => {\n  // console.log(`ðŸš€ ~ removeEmptyFields ~ files`, files);\n  let modified;\n  if (typeof data === `object` && data !== null) {\n    modified = {};\n    if (Array.isArray(data)) {\n      modified = [];\n      for (const element of data) {\n        modified.push(removeEmptyFields({ data: element, passKey, files }));\n      }\n    } else {\n      for (const key of Object.keys(data)) {\n        if (data[key] === `` && key !== `publishedAt`) {\n          continue;\n        }\n        modified[key] = removeEmptyFields({\n          data: data[key],\n          passKey: `${passKey ? `${passKey}.` : ``}${key}`,\n          files,\n        });\n      }\n    }\n  } else {\n    modified = data;\n  }\n  return modified;\n};\n\nexport const appendFilesToFormData = (formData, files) => {\n  // console.log(`ðŸš€ ~ appendFilesToFormData ~ formData`, formData);\n  if (Object.keys(files).length) {\n    for (const key of Object.keys(files)) {\n      // console.log(`ðŸš€ ~ key`, key);\n      if (Array.isArray(files[key])) {\n        for (const [_, file] of files[key].entries()) {\n          // console.log(`ðŸš€ ~ file`, file, files[key]);\n          formData.append(`files.${key}`, file);\n        }\n      } else {\n        // console.log(`ðŸš€ ~ appendFilesToFormData ~ key`, key);\n        // console.log(`ðŸš€ ~ file`, file, files[key]);\n        formData.append(`files.${key}`, files[key]);\n      }\n    }\n  }\n};\n","import { useMemo, useState, useEffect } from \"react\";\nimport {\n  useTable,\n  useSortBy,\n  useFilters,\n  useGlobalFilter,\n  useExpanded,\n  useRowSelect,\n} from \"react-table\";\n\n/**\n * Filter function by text content\n *\n * @param {array} rows - an array of sorted values â€‹â€‹from the `useTable ()` hook\n * @param {string} accessor - filtering key\n * @param {string} filterValue - the passed filtering parameter by which the comparison is made\n * @returns {array} filtered array of values\n */\nconst text = (rows, accessor, filterValue) => {\n  return rows.filter((row) => {\n    const rowValue = row[prefix][accessor];\n\n    return rowValue !== undefined\n      ? String(rowValue)\n          .toLowerCase()\n          .startsWith(String(filterValue).toLowerCase())\n      : true;\n  });\n};\n\nconst baseFilters = {\n  text,\n};\n\n/**\n * Column element, describes how useTable should configure the returned `headerGroups` array\n * @typedef ColumnItemObject\n * @type {object}\n * @property {string} Header - column name. Will be displayed in the component `Sorting â†’ SortButton â†’ P`\n * @property {string} accessor - the key of the object in the iterable object of the `data` array. A value is taken from it to pass it to the displayed component\n * @property {boolean} [hidden] - parameter that affects the display of the component in `Sorting`. If the value is `false`, then the component in` Sorting` will be hidden\n * @property {function} [Filter] - component to render in `Sorting`\n * @property {string} [filter] - the name of the filtering function must match the name of the function passed to `useLookupTable ({config.filterTypes: {...}})`. Fires when clicking on an element in `Sorting`\n * @property {string} [className] - `useStyleRewriter` classes for substitution in the component` Sorting â†’ SortButton`\n */\n\n/**\n * Hook seed configuration object\n * @typedef HookConfig\n * @type {object}\n * @property {{ id: string }[]} sortBy - the `accessor`'s array by which to sort the data\n * @property {{ id: string, value: any }[]>} filters - array of applied filters\n * @property {string} globalFilter - initial filter value\n * @property {{ rowId: string }[]} selectedRowIds - an array with objects holding the selected table rows\n * @property {boolean} useRowSelect - a parameter that determines whether the method for selecting an item in the table should be exported. If `true`, in addition to the columns from `columns`, one more will be added at the very beginning. Which will trigger the work with the selection of elements. They can be obtained in `rows â†’ row.isSelected`. And call it via `rows â†’ row.toggleRowSelected(Boolean)`.\n * @property {{ string: function }} filterTypes - object with functions for filtering. Example `{ filterByName: (rows, accessor, filterValue) => rows.filter(r => r[accessor] !== filterValue) }`.\n */\n\n/**\n * Data returned from the hook\n * @typedef ReturnObject\n * @type {object}\n * @property {string} inputValue - the value from the input field. Used in the component, since the form uses `onInputChange`\n * @property {function} onInputChange - filtering state change function\n * @property {array} headerGroups - array of column header parameters. Also contains handlers for sorting,filtering - [`setFilter`](https://react-table.tanstack.com/docs/api/useFilters#instance-properties), [`toggleSortBy`](https://react-table.tanstack.com/docs/api/useSortBy#instance-properties).\n * @property {array} rows - array of transformed [data](https://react-table.tanstack.com/docs/api/useTable#row-properties)\n * @property {function} prepareRow - [data conversion function](https://react-table.tanstack.com/docs/api/useTable#instance-properties) to prevent re-rendering\n * @property {object} state - [state of the hook](https://react-table.tanstack.com/docs/api/useTable#instance-properties)\n * @property {function} toggleRowExpanded - [function](https://react-table.tanstack.com/docs/api/useExpanded#instance-properties) for opening nested data\n */\n\n/**\n * Hook that transforms data suitable for display in a table. Adds handlers to work with sorting, filtering and searching.\n * @param {array.<ColumnItemObject>} columns - An array of objects `ColumnItemObject` that characterizes the display of columns for sorting and filtering items. It combines rendering, filtering and sorting parameters.\n * @param {object[]} data - An array of data to be prepared for the table.\n * @param {HookConfig} [config] - A hook configuration object and setting the initial value of the data used in the hook functions. Used when working with realtime data. Since if you do not set `initialState`, then when the input data changes, filtering and sorting take an init value\n * @returns {ReturnObject}\n */\nconst useLookupTable = ({\n  columns = [],\n  data: passedData = [],\n  getRowId,\n  config = { selectedRowIds: [] },\n  initialFiltersState = [],\n}) => {\n  const data = useMemo(() => {\n    return passedData;\n  }, [passedData.length]);\n\n  const [sortBy, setSortBy] = useState(config.sortBy);\n  const [filters, setFilters] = useState(initialFiltersState);\n  const [localGlobalFilter, setLocalGlobalFilter] = useState(\n    config.globalFilter || ``\n  );\n\n  const [localSelectedRowIds, setLocalSelectedRowIds] = useState(\n    config.selectedRowIds || undefined\n  );\n\n  const shouldUseRowSelect = useMemo(() => config.useRowSelect ?? false, []);\n\n  /**\n   * State memoization to prevent data erasure when `data` changes\n   * */\n  const initialState = useMemo(() => {\n    const state = {};\n    if (sortBy) state.sortBy = sortBy;\n\n    if (filters) state.filters = filters;\n\n    if (localGlobalFilter) state.globalFilter = localGlobalFilter;\n\n    if (localSelectedRowIds) state.selectedRowIds = localSelectedRowIds;\n\n    return state;\n  }, [sortBy, filters, localSelectedRowIds]);\n\n  const filterTypes = useMemo(() => {\n    return { ...baseFilters, ...config.filterTypes };\n  }, []);\n\n  useEffect(() => {\n    if (data.length && config.selectedRowIds) {\n      setLocalSelectedRowIds(config.selectedRowIds);\n    }\n  }, [data]);\n\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      filterTypes,\n      initialState,\n      getRowId,\n    },\n    useGlobalFilter,\n    useFilters,\n    useSortBy,\n    useExpanded,\n    useRowSelect\n  );\n\n  const {\n    headerGroups,\n    rows,\n    setGlobalFilter,\n    prepareRow,\n    toggleRowExpanded,\n    getTableBodyProps,\n    getTableProps,\n    state,\n    toggleAllRowsSelected,\n  } = tableInstance;\n\n  /**\n   * Save `isSelected` IDs state for real-data rendering\n   */\n  useEffect(() => {\n    let foundSelected = false;\n    if (!rows.length) {\n      return;\n    }\n\n    const selected = {};\n    rows?.map((row) => {\n      selected[row.index] = row?.isSelected;\n      foundSelected = true;\n    });\n    if (foundSelected) {\n      setLocalSelectedRowIds(selected);\n    }\n\n    if (!foundSelected) {\n      setLocalSelectedRowIds({});\n    }\n  }, [state]);\n\n  /**\n   * Save `isSorted` value for real-data rendering\n   */\n  useEffect(() => {\n    let foundSorted = false;\n    if (!rows.length) {\n      return;\n    }\n\n    headerGroups[0].headers.map((header) => {\n      if (header?.isSorted) {\n        setSortBy([{ id: header.id, desc: !!header.isSortedDesc }]);\n        foundSorted = true;\n      }\n    });\n    if (!foundSorted) {\n      setSortBy([]);\n    }\n  }, [rows]);\n\n  /**\n   * Save `filterValue` for real-data rendering\n   */\n\n  useEffect(() => {\n    let foundFiltered = false;\n\n    if (!rows.length) {\n      return;\n    }\n\n    headerGroups[0].headers.map((header) => {\n      if (header.filterValue) {\n        setFilters([{ id: header.id, value: header.filterValue }]);\n        foundFiltered = true;\n      }\n    });\n\n    if (!foundFiltered) setFilters([]);\n  }, [rows]);\n\n  const [inputValue, setInputValue] = useState(state.globalFilter);\n\n  const onGlobalFilterChange = (value) => {\n    setGlobalFilter(value || undefined);\n  };\n\n  const onInputChange = (e) => {\n    if (config.onInputChange) {\n      config.onInputChange(e.target.value);\n    }\n    setInputValue(e.target.value);\n    onGlobalFilterChange(e.target.value);\n    setLocalGlobalFilter(e.target.value);\n  };\n\n  return {\n    inputValue,\n    onInputChange,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    getTableBodyProps,\n    getTableProps,\n    toggleRowExpanded,\n    toggleAllRowsSelected,\n  };\n};\n\nexport default useLookupTable;\n\n/**\n * A function that creates a valid documentation item structure for using in a `Storybook`, section` ArgsTable`.\n *\n * export default {\n *    component: \"NameOfCompOrFunction\",\n *    title: \"TitleOfComponent\",\n *    argTypes: {*it will be here*}\n * }\n *\n * @param {String} title - Variable name\n * @param {String} description - Variable description\n * @param {String} type - Variable type in string `(Array | Object | String | Boolean)`\n * @param {String} detail - The structure of the passed argument with a description of the types. Supported by `Markdown`. For example:\n *    \"Header: String,\\n\n *     accessor: String,\\n\n *     [hidden]: Boolean,\\n\n *     [Filter]: Function,\\n\n *     [filter]: String,\\n\n *     [className]: String\".\n * @param {String} defaultValue - The default value will be in the table in the `Default` column\n * @param {Boolean} isRequired - Required field or not\n * @returns {Object}\n */\nfunction createArgDocumentation({\n  title,\n  description,\n  type,\n  detail,\n  defaultValue,\n  isRequired = false,\n}) {\n  const documentation = {\n    [title]: {\n      description,\n      table: {\n        type: {\n          summary: type,\n          detail,\n        },\n        defaultValue: {\n          summary: defaultValue,\n          detail: undefined,\n        },\n      },\n      type: {\n        name: type,\n        required: isRequired,\n      },\n    },\n  };\n\n  return documentation;\n}\n\n/**\n * `columns` documentation for `Storybook`\n */\nconst columnsDoc = createArgDocumentation({\n  title: `columns`,\n  description: `An array of objects \\`ColumnItemObject\\` that characterizes the display of columns for sorting and filtering items. It combines rendering, filtering and sorting parameters.`,\n  type: `array`,\n  detail: `Header: string,\\naccessor: string,\\n[hidden]: Boolean,\\n[Filter]: Function,\\n[filter]: string,\\n[className]: string`,\n  defaultValue: `[]`,\n  isRequired: true,\n});\n\n/**\n * `data` documentation for `Storybook`\n */\nconst dataDoc = createArgDocumentation({\n  title: `data`,\n  description: `An array of objects`,\n  type: `array`,\n  detail: `Any type of arrays, where placed objects`,\n  defaultValue: `[]`,\n  isRequired: true,\n});\n\n/**\n * `config` documentation for `Storybook`\n */\nconst configDoc = createArgDocumentation({\n  title: `config`,\n  description: `A hook configuration object and setting the initial value of the data used in the hook functions. Used when working with realtime data. Since if you do not set \\`initialState\\`, then when the input data changes, filtering and sorting take an init value`,\n  type: `object`,\n  detail: `sortBy: [{ id: string }],\\nfilters: [{ id: string, value: any }],\\nglobalFilter: string,\\nselectedRowIds: [{ rowId: string }],\\nuseRowSelect: boolean,\\nfilterTypes: { string: function }`,\n  defaultValue: `{ selectedRowIds: [] }`,\n  isRequired: false,\n});\n\n/**\n * `return` documentation for `Storybook`\n */\nconst returnDoc = createArgDocumentation({\n  title: `return`,\n  description: `Object returned from the hook. All information on the returned data can be found in the documentation React Table (https://react-table.tanstack.com/docs/api/overview), by entering the corresponding key in the search (\\`onInputChange\\`, \\`headerGroups\\`).`,\n  type: `object`,\n  detail: `inputValue: string\\nonInputChange: function\\nheaderGroups: array\\nrows: array\\nprepareRow: function\\nstate: object\\ntoggleRowExpanded: function`,\n  isRequired: false,\n});\n\n/**\n * `Storybook` default export object with documentation for `props` and `return`\n */\nexport const sbDocumentation = {\n  component: useLookupTable,\n  title: `Hooks/useLookupTable`,\n  argTypes: {\n    ...columnsDoc,\n    ...dataDoc,\n    ...configDoc,\n    ...returnDoc,\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: `Hook that transforms data suitable for display in a table. Adds handlers to work with sorting, filtering and searching.`,\n      },\n    },\n  },\n};\n","import useLookupTable from \"./use-lookup-table\";\n\nconst hooks = {\n  useLookupTable,\n};\n\nexport default hooks;\n","import * as apiUtils from \"./api\";\nimport hooks from \"./hooks\";\n\nexport default {\n  api: apiUtils,\n  hooks,\n};\n"],"names":["useMemo","useState","useEffect","useTable","useGlobalFilter","useFilters","useSortBy","useExpanded","useRowSelect"],"mappings":"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"}